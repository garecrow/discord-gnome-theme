@use "controls";

%-dark-headerbar {
	--headerbar_fg_color: #ffffff;

	:root:not(.app-focused) & {
		--headerbar_fg_color: color-mix(
			in srgb,
			#ffffff var(--dim-level-opacity),
			transparent
		);
	}
}

// VC is permanently dark themed, so do the same for titlebar.
//
// prettier-ignore
.base_c48ade:has(
	> .content_c48ade
	> .page_c48ade
	> div
	> .chat_f75fb0
	> .wrapper_cb9592
) > .bar_c38106 {
	@extend %-dark-headerbar;
}

.callContainer_cb9592 {
	border: none;
}

// popout
.container__9fa5a .button__201d5 {
	height: unset;
}

// !important in controls/buttons
.colorable_f1ceac.colorable_f1ceac {
	@include controls.icon-button;

	&.attachedCaret_f1ceac {
		--icon: icon("up");

		margin: 0;

		width: 24px;

		&::after {
			content: "";

			position: absolute;
			left: 0;
			height: calc(100% - var(--spacing-2x));

			border-left: 1px solid;
			border-color: color-mix(
				in srgb,
				currentColor var(--dim-level-opacity),
				transparent
			);

			transition: var(--backdrop_transition);

			.attachedCaretButtonContainer_f1ceac:hover & {
				border-color: transparent;
			}
		}
	}

	&.button__201d5.colorBrand__201d5 {
		color: var(--window_fg_color);
	}

	&.disconnect_f1ceac {
		color: var(--destructive-color);
	}

	&.redGlow_f1ceac {
		color: var(--destructive-color);
	}

	&:not([aria-label]) {
		// Assume soundboard button, since it doesn't have an aria-label, and
		// pulls out the expression picker on hover instead of displaying a
		// tooltip, fucking genius design
		--icon: icon("bullhorn");
	}
}

.headerBar__49508 {
	@extend %-dark-headerbar;
}

.headerBarChildren__49508 {
	gap: 0;
}

.headerWrapper_cb9592 .button__9db96 {
	@include controls.icon-button;

	color: inherit;
	margin: 0;
}

.overlayButton__2f4f7 {
	@include controls.icon-button-circular("settings");
}

.rightTrayIcon_cb9592 {
	@include controls.icon-button-circular;

	--accent-color: var(--window_fg_color);
	margin-left: var(--spacing);
}

.wrapper__1405b {
	gap: var(--spacing-2x);

	.buttonSection__1405b {
		background-color: color-mix(in srgb, currentColor 10%, transparent);
		gap: var(--spacing);
		border: none;
	}
}
